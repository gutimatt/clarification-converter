{"version":3,"sources":["Clarification.js","ClarificationList.js","Response.js","ResponseList.js","App.js","index.js"],"names":["Clarification","query","clarificationTextArea","useRef","responseTextArea","className","id","ref","disabled","aria-label","clarification","response","ClarificationList","map","queries","key","Response","class","ResponseList","App","useState","setClarification","builderValueRef","responseValueRef","useEffect","storedClarification","JSON","parse","sessionStorage","getItem","setItem","stringify","React","isOpen","setIsOpen","hideModal","copyText","document","getElementById","select","execCommand","onClick","e","current","value","type","clarificationValue","responseValue","prevClarifications","length","Modal","show","onHide","scrollable","Header","Title","Body","Footer","responseText","forEach","index","toString","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c5d8b37e.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport './css/Clarification.css'\r\n\r\nexport default function Clarification( {query} ) { \r\n    const clarificationTextArea = useRef();\r\n    const responseTextArea = useRef();\r\n\r\n    return ( \r\n        <>\r\n            <h4 className=\"p-1\">Non-Technical Clarification {query.id}</h4>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Task</span>\r\n                        </div>\r\n                        <textarea ref={clarificationTextArea} className=\"form-control\" disabled=\"true\" aria-label=\"Query\">{query.clarification}</textarea>\r\n                    </div>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Query</span>\r\n                        </div>\r\n                        <textarea ref={responseTextArea} className=\"form-control\" disabled=\"true\" aria-label=\"response\">{query.response}</textarea>\r\n                    </div>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Clarification from './Clarification'\r\n\r\nexport default function ClarificationList( {clarification} ) {\r\n    return (\r\n        clarification.map((queries) => {\r\n            return <Clarification key={queries.id} query={queries} />\r\n        })\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './css/Response.css';\r\n\r\nexport default function Response( {query} ) {\r\n\r\n    return (\r\n        <> \r\n            <div class=\"col clarification-container mb-3 p-3\">\r\n                <h4>Non-Technical Clarification {query.id}</h4>\r\n                <div class=\"clarification\">{query.clarification}</div>\r\n                <div class=\"response\">{query.response}</div>\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Response from './Response'\r\n\r\nexport default function ResponseList({clarification}) {\r\n\r\n    return (\r\n        clarification.map((queries) => {\r\n            return <Response query={queries}/>  \r\n        }) \r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'; \nimport ClarificationList from './ClarificationList';\nimport ResponseList from './ResponseList';\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './css/style.css';  \n\nfunction App() {\n  const [clarification, setClarification] = useState([])  \n  const builderValueRef = useRef(); \n  const responseValueRef = useRef();\n\n  const SESSION_STORAGE_KEY = 'react-clarification-converter.clarifications'\n\n  useEffect(() => {\n    const storedClarification = JSON.parse(sessionStorage.getItem(SESSION_STORAGE_KEY))\n    if (storedClarification) setClarification(storedClarification)\n  }, [])\n\n  useEffect(() => {\n    sessionStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(clarification))\n  }, [clarification])\n\n  function addClarification(e){ \n    const clarificationValue = builderValueRef.current.value;\n    const responseValue = responseValueRef.current.value;\n    if (clarificationValue === \"\" || responseValueRef === '') return \n    setClarification((prevClarifications) => {   \n      return [...prevClarifications, { \n        id: clarification.length+1, \n        clarification: clarificationValue, \n        response: responseValue}]\n    }) \n    builderValueRef.current.value = null;\n    responseValueRef.current.value = null;\n  } \n\n  function resetClarifications(e){\n    setClarification([]);\n    builderValueRef.current.value = null;\n    responseValueRef.current.value = null;\n  }\n\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const showModal = () => { \n    setIsOpen(true); \n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  function getCopy(){ \n    let responseText = `Hello Team!\n\n*{color:#3F50B1}Clarification:{color}*`;\n\n    let index = 1;\n\n    clarification.forEach((query) => {\n      responseText += `\n{panel:title=Non-Technical Clarification ${index.toString()}  } \n${query.clarification}\n{color:#14892c}Clarification: ${query.response}\n{color} \n{panel}\n`\n      index++;\n    })\n\n    responseText += `\n_*{color:#3F50B1}Thank you{color}*_`\n\n    document.getElementById('response-textarea').value = responseText; \n    copyText();\n  }\n\n  const copyEmail = () => {\n    let responseText = `Hi,\n\nI’m on your Website Care team here at GoDaddy. Our website designers are working on your website and need your help, please review the builder's notes below:\n`; \n    let index = 1; \n    clarification.forEach((query) => {\n      responseText += `\n* ${query.clarification}\n{color:#14892c}Clarification: ${query.response}\n{color}\n`\n      index++;\n    })\n\n    responseText += `\nAfter reviewing please reply to this email with the requested information mentioned above so we can finish updating your website.\n\nIf you have questions or need help, we’re here! Get in touch with us by replying here or give us a call at 480-463-8853.\n\nThank you,\nMatthew| Web Design Services 480-463-8853 / 6:00am - 6:30pm (AZ)`\n\n    document.getElementById('response-textarea').value = responseText; \n    copyText();\n  }\n \n  const copyText = () => {  \n    const responseText = document.getElementById('response-textarea'); \n    responseText.select(); \n    document.execCommand(\"copy\");\n  }\n\n\n  return (\n    <>\n        <main className=\"text-center container\">\n            <h1 className=\"banner p-3\">Enter Fields</h1>\n            <hr />\n            <ClarificationList clarification={clarification}/>  \n            <hr />\n            <h4 className=\"p-1\">Add Non-Technical Clarification </h4>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">Task</span>\n                        </div>\n                        <textarea ref={builderValueRef} className=\"form-control\" aria-label=\"Query\"></textarea>\n                    </div>\n                    <div className=\"input-group mb-3\" id=\"query-input-container\">\n                        <div className=\"input-group-prepend\" id=\"query-input\">\n                            <span className=\"input-group-text\">Query</span>\n                            <div id=\"query-input\"> \n                                <textarea ref={responseValueRef} className=\"form-control\" aria-label=\"response\"></textarea>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button onClick={resetClarifications} type=\"button\" className=\"btn btn-danger m-3\">Reset</button>\n            <button onClick={addClarification} type=\"button\" className=\"btn btn-primary m-3\">Add</button>\n            <button onClick={showModal} type=\"button\" className=\"btn btn-secondary m-3\">Done</button>\n \n            <Modal show={isOpen} onHide={hideModal} scrollable={true}>\n              <Modal.Header>\n                <Modal.Title>Clarification Response</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <ResponseList clarification={clarification}/> \n                <textarea id=\"response-textarea\" className=\"form-control\"></textarea>\n              </Modal.Body>\n              <Modal.Footer>\n                <button onClick={hideModal} className='btn btn-secondary'>Cancel</button>\n                <button onClick={copyEmail} type=\"button\" className=\"btn btn-info m-3\">Email</button>\n                <button onClick={getCopy} className=\"btn btn-primary\">Copy</button>\n              </Modal.Footer>\n            </Modal>\n        </main>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n"],"sourceRoot":""}